{"version":3,"sources":["logo.svg","components/Task.jsx","components/TaskList.jsx","App.js","index.js"],"names":["Task","Text","deleteItem","useState","checked","setChecked","id","className","icon","faCheck","onClick","e","preventDefault","faTrash","TaskList","TaskArr","tasks","setTasks","useEffect","map","text","index","length","App","taskArr","setTaskArr","inputText","setInputText","src","logo","alt","type","name","placeholder","value","onChange","target","newArr","unshift","filter","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAAe,MAA0B,iC,cC+B1BA,G,MA1BF,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAAiB,EACRC,oBAAS,GADD,mBAC/BC,EAD+B,KACtBC,EADsB,KAEtC,OACC,sBAAKC,GAAG,aAAR,UACC,mBAAGC,UAAWH,EAAU,qBAAuB,aAA/C,SAA8DH,IAC9D,sBAAKM,UAAU,QAAf,UACC,cAAC,IAAD,CACCD,GAAG,aACHE,KAAMC,IACNC,QAAS,SAAAC,GACRA,EAAEC,iBACFP,GAAW,MAGb,cAAC,IAAD,CACCC,GAAG,aACHE,KAAMK,IACNH,QAAS,SAAAC,GACRA,EAAEC,iBACFV,EAAWD,cCFFa,G,MAlBE,SAAC,GAAkC,IAAD,IAA/BC,eAA+B,MAArB,GAAqB,EAAjBb,EAAiB,EAAjBA,WAAiB,EACxBC,mBAASY,GADe,mBAC3CC,EAD2C,KACpCC,EADoC,KAgBlD,OAbAC,qBAAU,WACTD,EAASF,KACP,CAACA,IAWG,qBAAKT,GAAG,OAAR,SARCU,EAAMG,KAAI,SAACC,EAAMC,GACvB,OAAwB,IAAjBL,EAAMM,OACZ,6BAEA,cAAC,EAAD,CAAkBrB,KAAMmB,EAAMlB,WAAYA,GAA/BmB,U,MCsCAE,MAjDf,WAAgB,IAAD,EACiBpB,mBAAS,IAD1B,mBACNqB,EADM,KACGC,EADH,OAEoBtB,mBAAS,IAF7B,mBAENuB,EAFM,KAEIC,EAFJ,KAgBb,OACE,sBAAKrB,GAAG,MAAR,UACE,qBAAKA,GAAG,SAAR,SACE,sBAAKA,GAAG,iBAAR,UACE,4CACA,qBAAKA,GAAG,OAAOsB,IAAKC,EAAMC,IAAI,cAGlC,sBAAKxB,GAAG,OAAR,UACE,qBAAKC,UAAU,QAAf,SACE,4CAEF,qBAAKD,GAAG,iBAAR,SACE,sBAAKC,UAAU,aAAf,UACI,uBACEwB,KAAK,OACLC,KAAK,aACL1B,GAAG,OACH2B,YAAY,0BACZC,MAAOR,EACPS,SAAU,SAACxB,GAAOgB,EAAahB,EAAEyB,OAAOF,UAE1C,wBAAQxB,QA7BpB,WACE,IAAI2B,EAASb,EACba,EAAOC,QAAQZ,GACfD,EAAWY,GACXV,EAAa,KAyBuBrB,GAAG,cAA7B,sBAKN,cAAC,EAAD,CAAUS,QAASS,EAAStB,WAvClC,SAAoBkB,GAClB,IAAIiB,EAASb,EAAQe,QAAQ,SAAAC,GAAO,OAAIA,IAAYpB,KACpDK,EAAWY,aCNfI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3fe284f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport '../css/Task.css';\r\n\r\nconst Task = ({ Text, deleteItem }) => {\r\n\tconst [checked, setChecked] = useState(false);\r\n\treturn (\r\n\t\t<div id='list-entry'>\r\n\t\t\t<p className={checked ? 'entry-text checked' : 'entry-text'}>{Text}</p>\r\n\t\t\t<div className='icons'>\r\n\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\tid='check-icon'\r\n\t\t\t\t\ticon={faCheck}\r\n\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tsetChecked(true);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\tid='trash-icon'\r\n\t\t\t\t\ticon={faTrash}\r\n\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tdeleteItem(Text);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Task;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Task from './Task';\r\nimport '../css/TaskList.css';\r\n\r\nconst TaskList = ({ TaskArr = [], deleteItem }) => {\r\n\tconst [tasks, setTasks] = useState(TaskArr);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTasks(TaskArr);\r\n\t}, [TaskArr]);\r\n\r\n\tfunction generateTaskList() {\r\n\t\treturn tasks.map((text, index) => {\r\n\t\t\treturn tasks.length === 0 ? (\r\n\t\t\t\t<></>\r\n\t\t\t) : (\r\n\t\t\t\t<Task key={index} Text={text} deleteItem={deleteItem} />\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\treturn <div id='list'>{generateTaskList()}</div>;\r\n};\r\nexport default TaskList;\r\n","import logo from './logo.svg';\nimport TaskList from './components/TaskList'\nimport './css/App.css'\nimport { useState } from 'react';\n\nfunction App() {\n  const [taskArr, setTaskArr] = useState([])\n  const [inputText,setInputText] = useState('')\n\n  function deleteItem(text) {\n    let newArr = taskArr.filter( element => element !== text)\n    setTaskArr(newArr)\n  }\n\n  function addTodo() {\n    let newArr = taskArr;\n    newArr.unshift(inputText)\n    setTaskArr(newArr)\n    setInputText('')\n  }\n\n  return (\n    <div id=\"app\">\n      <div id=\"header\">\n        <div id=\"header-content\">\n          <h2>React TODO</h2>\n          <img id=\"logo\" src={logo} alt=\"logo\"/>\n        </div>\n      </div>\n      <div id=\"main\">\n        <div className=\"title\">\n          <h2>TODO APP</h2>\n        </div>\n        <div id=\"task-input-bar\">\n          <div className=\"task-input\">\n              <input\n                type=\"text\"\n                name=\"task-input\"\n                id=\"task\"\n                placeholder=\"What do you plan to do?\"\n                value={inputText}\n                onChange={(e) => {setInputText(e.target.value)}}\n              />\n              <button onClick={addTodo} id=\"task-button\">\n                ADD\n              </button>\n            </div>\n        </div>\n        <TaskList TaskArr={taskArr} deleteItem={deleteItem} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}